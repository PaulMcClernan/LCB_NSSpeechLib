library community.paulmcclernan.speechsynth

use com.livecode.foreign
use com.livecode.objc
use com.livecode.widget
use com.livecode.engine
use com.livecode.library.widgetutils

metadata title is "NSSpeechSynth"
metadata author is "Paul McClernan"
metadata version is "1.0.0"
metadata OS is "macOS"

-- constants:
-- NSSpeechImmediateBoundary = 0
-- const NSSpeechSentenceBoundary=2
-- const NSSpeechWordBoundary=1

variable sNSSpeechSynth as optional ObjcObject -- must be optional to allow a null value
variable sNSSpeechFinishedDelegate as ObjcObject

private foreign handler objC_NSURLfileURLWithPath(in pPathString as ObjcId) returns ObjcID binds to "objc:NSURL.+fileURLWithPath:"
private foreign handler ObjC_NSArrayComponentsJoinedByString(in pObj as ObjcID, in pSeperator as ObjcId) returns ObjcId binds to "objc:NSArray.-componentsJoinedByString:"

-- bind the allocation handler
private foreign handler ObjC_NSSpeechSynthAlloc() returns optional ObjcID binds to "objc:AppKit>NSSpeechSynthesizer.+alloc"

-- bind the initialisation of new object - ok
private foreign handler ObjC_NSSpeechSynthInitWithVoice(in pNSSpeechSynthObj as ObjcID, in pNSStrVoiceName as optional ObjcId ) \
			returns optional ObjcRetainedId binds to "objc:AppKit>NSSpeechSynthesizer.-initWithVoice:" -- can be null for default voice

private foreign handler ObjC_NSSpeechSynthSetDelegate(in pNSSpeechSynthObj as ObjcID, in pDelegateObj as ObjcId ) \
			returns nothing binds to "objc:AppKit>NSSpeechSynthesizer.-setDelegate:"

private foreign handler ObjC_NSSpeechSynthSetVoice(in pNSSpeechSynthObj as ObjcID, in pNSStrVoiceName as ObjcId ) \
			returns CBool binds to "objc:AppKit>NSSpeechSynthesizer.-setVoice:" -- can be null for default voice

private foreign handler ObjC_NSSpeechSyntCurrenthVoice(in pNSSpeechSynthObj as ObjcId) \
			returns ObjcId binds to "objc:AppKit>NSSpeechSynthesizer.voice"

private foreign handler ObjC_NSSpeechSynthGetVolume(in pNSSpeechSynthObj as optional ObjcId) \
			returns NaturalFloat binds to "objc:AppKit>NSSpeechSynthesizer.volume"

private foreign handler ObjC_NSSpeechSynthGetProp(in pNSSpeechSynthObj as ObjcID, in pNSStrPropToGet as ObjcID) \
			returns optional ObjcId binds to "objc:AppKit>NSSpeechSynthesizer.-valueForKey:"

private foreign handler	ObjC_NSSpeechSynthSetProp(in pNSSpeechSynthObj as ObjcId,in pValue as ObjcId, in pSelector as ObjcId) \
			returns nothing binds to "objc:AppKit>NSSpeechSynthesizer.-setValue:forKey:"

private foreign handler ObjC_NSSpeechSynthAvailableVoices() returns ObjcID binds to "objc:AppKit>NSSpeechSynthesizer.+availableVoices"

private foreign handler ObjC_NSSpeechSynthAttributesForVoice(in pNSStrVoiceID as ObjcID) returns optional ObjcID binds to "objc:AppKit>NSSpeechSynthesizer.+attributesForVoice:"

private foreign handler ObjC_NSSpeechSynthStartSpeakingString(in pNSSpeechSynthObj as ObjcID, in pNSStrToSpeak as optional ObjcID ) \
			returns CBool binds to "objc:AppKit>NSSpeechSynthesizer.-startSpeakingString:"

private foreign handler ObjC_NSSpeechSynthStopSpeaking(in pNSSpeechSynthObj as ObjcID) \
			returns nothing binds to "objc:AppKit>NSSpeechSynthesizer.-stopSpeaking"

private foreign handler ObjC_NSSpeechSynthStopAtBoundary(in pNSSpeechSynthObj as ObjcID, in pNSUintSpeechBoundary as CUint ) \
			returns nothing binds to "objc:AppKit>NSSpeechSynthesizer.-stopSpeakingAtBoundary:"

private foreign handler ObjC_NSSpeechSynthPauseAtBoundary(in pNSSpeechSynthObj as ObjcID, in pNSUintSpeechBoundary as CUint ) \
			returns nothing binds to "objc:AppKit>NSSpeechSynthesizer.-pauseSpeakingAtBoundary:"

private foreign handler ObjC_NSSpeechSynthContinueSpeaking(in pNSSpeechSynthObj as ObjcID) \
			returns nothing binds to "objc:AppKit>NSSpeechSynthesizer.-continueSpeaking"

private foreign handler ObjC_NSSpeechSynthStartSpeakingStringToURL(in pNSSpeechSynthObj as ObjcID, in pNSStrToSpeak as ObjcID, in pNSURLSoundFile as ObjcID) \
			returns CBool binds to "objc:AppKit>NSSpeechSynthesizer.-startSpeakingString:toURL:" --Begins synthesizing text into a sound (AIFF) file.

handler lcbNSSpeechDidFinishSpeaking(in pSender as ObjcObject, in pDidFinish as CBool) returns optional any
				-- (void)speechSynthesizer:(NSSpeechSynthesizer *)sender  didFinishSpeaking:(BOOL)finishedSpeaking;
			-- Parameters
			-- sender = An NSSpeechSynthesizer object that has stopped speaking into the sound output device.
			-- success -- YES when speaking completed normally, NO if speaking is stopped prematurely for any reason.
			-- send "lcbNSSpeechFinished"
			post "lcbNSSpeechFinished" && pDidFinish formatted as string
end handler

public handler GetNSSpeechSynthesizerDelegate() returns ObjcObject
	return CreateObjcDelegate("NSSpeechSynthesizerDelegate", { "speechSynthesizer:didFinishSpeaking:": lcbNSSpeechDidFinishSpeaking })
end handler

public handler lcbNSSpeechSynthInit(in pVoiceStr as String) returns optional any
	--log pVoiceStr
	-- if pVoiceStr is nothing then
	--	variable tNSString as ObjcObject
	if sNSSpeechSynth is nothing then
		unsafe
			put ObjC_NSSpeechSynthAlloc() into sNSSpeechSynth
			if pVoiceStr is "" then
				put ObjC_NSSpeechSynthInitWithVoice(sNSSpeechSynth,nothing) into sNSSpeechSynth
			else
				put ObjC_NSSpeechSynthInitWithVoice(sNSSpeechSynth,StringToNSString(pVoiceStr)) into sNSSpeechSynth
			end if
			--	put ObjC_NSSpeechSyntCurrenthVoice(sNSSpeechSynth) into tNSString
			put GetNSSpeechSynthesizerDelegate() into sNSSpeechFinishedDelegate
			ObjC_NSSpeechSynthSetDelegate(sNSSpeechSynth,sNSSpeechFinishedDelegate)
		end unsafe
	return true
	else
		if sNSSpeechSynth is not nothing then
			return nothing
		else
			return false
		end if
	end if
end handler

public handler lcbNSSpeechSynthSpeakString(in pSpeakString as String) returns optional Boolean
	variable tSuccess as Boolean
	if sNSSpeechSynth is not nothing then
		unsafe
			-- ObjC_NSSpeechSynthSetDelegate(sNSSpeechSynth,sNSSpeechFinishedDelegate)
			put ObjC_NSSpeechSynthStartSpeakingString(sNSSpeechSynth,StringToNSString(pSpeakString)) into tSuccess
		end unsafe
	end if
	return tSuccess
end handler

public handler lcbNSSpeechSynthStopSpeaking() returns nothing
	if sNSSpeechSynth is not nothing then
		unsafe
				ObjC_NSSpeechSynthStopSpeaking(sNSSpeechSynth)
		end unsafe
	end if
end handler

public handler lcbNSSpeechSynthStopAtBoundary(in tBoundaryStr as String) returns nothing
	variable tBoundary as Number
	-- immediately,word,sentence
	if tBoundaryStr is "now" then
		put 0 into tBoundary
	end if
	if tBoundaryStr is "word" then
		put 1 into tBoundary
	end if
	if tBoundaryStr is "sentence" then
		put 2 into tBoundary
	end if
	if sNSSpeechSynth is not nothing then
		unsafe
				ObjC_NSSpeechSynthStopAtBoundary(sNSSpeechSynth,tBoundary)
				--	ObjC_NSSpeechSynthStopAtBoundary(sNSSpeechSynth,NumberToNSNumber(tBoundary))
		end unsafe
	end if
end handler

public handler lcbNSSpeechSynthPauseAtBoundary(in tBoundaryStr as String) returns nothing
	variable tBoundary as Number
	-- immediately,word,sentence
	if tBoundaryStr is "now" then
		put 0 into tBoundary
	end if
	if tBoundaryStr is "word" then
		put 1 into tBoundary
	end if
	if tBoundaryStr is "sentence" then
		put 2 into tBoundary
	end if
	if sNSSpeechSynth is not nothing then
		unsafe
				ObjC_NSSpeechSynthPauseAtBoundary(sNSSpeechSynth,tBoundary)
				--	ObjC_NSSpeechSynthStopAtBoundary(sNSSpeechSynth,NumberToNSNumber(tBoundary))
		end unsafe
	end if
end handler

public handler lcbNSSpeechSynthContinue() returns nothing
	if sNSSpeechSynth is not nothing then
		unsafe
			ObjC_NSSpeechSynthContinueSpeaking(sNSSpeechSynth)
		end unsafe
	end if
end handler

public handler lcbNSSpeechSynthSpeechStringToFile(in pSpeakString as String, in pOutFilePath as String) returns optional Boolean
	variable tFileNSURL as ObjcObject
	variable tSuccess as Boolean
	if sNSSpeechSynth is not nothing then
		unsafe
		put objC_NSURLfileURLWithPath(StringToNSString(pOutFilePath)) into tFileNSURL
		put ObjC_NSSpeechSynthStartSpeakingStringToURL(sNSSpeechSynth,StringToNSString(pSpeakString),tFileNSURL) into tSuccess
		end unsafe
	end if
	return tSuccess
end handler

public handler NSArrayToCRLFDelimitString(in pNSArray as ObjcObject) returns String
  variable tNSArray as ObjcObject
  variable tNSString as ObjcObject
  variable tStr as String
  -- put "\r\n" into tStr
  put "\n" into tStr
  unsafe
     put ObjC_NSArrayComponentsJoinedByString(pNSArray, StringToNSString(tStr)) into tNSString
  end unsafe
  return StringFromNSString(tNSString)
end handler

public handler lcbNSSpeechSynthGetAvailableVoices() returns String
	if sNSSpeechSynth is nothing then
			variable tStr as String
			put "An Error Occured" into tStr
			return tStr
	else
   	unsafe
			variable tNSArray as ObjcID
			put ObjC_NSSpeechSynthAvailableVoices() into tNSArray
  			-- put ObjC_NSSpeechSynthGetProperty(sNSSpeechSynth,StringToNSString("someproperty")) into tNSArray
		  return NSArrayToCRLFDelimitString(tNSArray)
   	end unsafe
	end if
end handler

public handler lcbNSSpeechSynthGetVoiceName(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			-- log tVoiceAttributesArray
			--	return tVoiceAttributesArray["VoiceNameRoot"]
			return tVoiceAttributesArray["VoiceName"]
   end unsafe
end handler

public handler lcbNSSpeechSynthGetVoiceDemoText(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			return tVoiceAttributesArray["VoiceDemoText"]
   end unsafe
end handler

public handler lcbNSSpeechSynthGetVoiceGender(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			return tVoiceAttributesArray["VoiceGender"]
   end unsafe
end handler

public handler lcbNSSpeechSynthGetVoiceAge(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			return tVoiceAttributesArray["VoiceGender"]
   end unsafe
end handler

public handler lcbNSSpeechSynthGetVoiceLanguage(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			return tVoiceAttributesArray["VoiceLanguage"]
   end unsafe
end handler
public handler lcbNSSpeechSynthGetVoiceLocale(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			return tVoiceAttributesArray["VoiceGender"]
   end unsafe
end handler

public handler lcbNSSpeechSynthGetVoiceVersion(in pVoiceIDStr as String) returns String
	unsafe
			variable tNSDictVoiceAttributes as ObjcID
			variable tVoiceAttributesArray as Array
			put ObjC_NSSpeechSynthAttributesForVoice(StringToNSString(pVoiceIDStr)) into tNSDictVoiceAttributes
			put ArrayFromNSDictionary(tNSDictVoiceAttributes) into tVoiceAttributesArray
			return tVoiceAttributesArray["VoiceVersion"]
   end unsafe
end handler

public handler lcbNSSpeechSynthSetVoice(in pVoiceStr as String) returns Boolean
		variable tSuccess as Boolean
   	unsafe
			put ObjC_NSSpeechSynthSetVoice(sNSSpeechSynth,StringToNSString(pVoiceStr)) into tSuccess
		  return tSuccess
   	end unsafe
end handler

public handler lcbNSSpeechSynthGetVolume() returns String
	variable tVolume as optional NaturalFloat
	unsafe
		put ObjC_NSSpeechSynthGetVolume(sNSSpeechSynth) into tVolume
 		return tVolume formatted as string
	end unsafe
end handler

public handler lcbNSSpeechSynthSetVolume(in pVolume as NaturalFloat) returns nothing
	unsafe
	ObjC_NSSpeechSynthSetProp(sNSSpeechSynth,NumberToNSNumber(pVolume),StringToNSString("volume"))
	end unsafe
end handler

public handler lcbNSSpeechSynthSetRate(in pRateWPM as NaturalFloat) returns nothing
	unsafe
	ObjC_NSSpeechSynthSetProp(sNSSpeechSynth,NumberToNSNumber(pRateWPM),StringToNSString("rate"))
	end unsafe
end handler

public handler lcbNSSpeechSynthSetPitchBase(in pPitch as NaturalFloat) returns nothing
	unsafe
	ObjC_NSSpeechSynthSetProp(sNSSpeechSynth,NumberToNSNumber(pPitch),StringToNSString("pitchBase"))
	end unsafe
end handler

end library
